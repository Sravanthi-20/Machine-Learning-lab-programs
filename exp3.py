# -*- coding: utf-8 -*-
"""exp3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qXH7IgEt2FK_bE7qxDqh8gRWCprAsm-3
"""

import numpy as np
from sklearn import datasets
from sklearn.model_selection import train_test_split
import matplotlib.pyplot as plt
from matplotlib.colors import ListedColormap
def euclidean_distance(x1,x2):
  return np.sqrt(np.sum((x1-x2)**2))
class KNN:
  def __init__(self, k=3):
    self.k=k
  def fit(self,X,y):
    self.X_train=X
    self.y_train=y
  def predict(self,X):
    y_pred=[self._predict(x)for x in X]
    return np.array(y_pred)
  def _predict(self,x):
    distances=[euclidean_distance(x,x_train)for x_train in self.X_train]
    k_idx=np.argsort(distances)[:self.k]
    k_neighbor_labels=[self.y_train[i]for i in k_idx]
    most_common=Counter(k_neighbor_labels).most_common(1)
    return most_common[0][0]
import numpy as np
from collections import Counter
cmap=ListedColormap(["#000FFF","#FFF000","#00FF00"])

iris=datasets.load_iris()
X,y=iris.data,iris.target
print("Plot showing sepel length,sepal width data of iris data")
plt.figure()
plt.scatter(X[:,0],X[:,1],c=y,cmap=cmap,edgecolor='none',s=40)
plt.show()
Xtrain,Xtest,Ytrain,Ytest=train_test_split(X,y,test_size=0.2,random_state=1234)
clf=KNN(k=5)
clf.fit(Xtrain,Ytrain)
predictions=clf.predict(Xtest)
acc=np.sum(predictions==Ytest)/len(Ytest)
print("Accuracy of user defined KNN clasifier for k=5 neighbors on iris dataset is:%0.3f"%acc)